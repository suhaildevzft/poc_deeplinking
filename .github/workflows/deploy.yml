name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Copy website files
        run: |
          mkdir -p _site/.well-known
          mkdir -p _site/app/dashboard
          cp website/index.html _site/
          cp app/dashboard/index.html _site/app/dashboard/
          cp .well-known/apple-app-site-association _site/.well-known/
          cp .well-known/assetlinks.json _site/.well-known/
          
          # Update the website to use the GitHub Pages URL (optional, for future use)
          # sed -i 's/localhost:8000/${{ github.repository_owner }}.github.io\/${{ github.event.repository.name }}/g' _site/index.html
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
